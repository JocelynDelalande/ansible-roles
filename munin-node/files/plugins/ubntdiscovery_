#!/usr/bin/env python3

import subprocess
import sys
import json


class PluginError(Exception):
    pass

def get_data(iface):
    try:
        raw_data = subprocess.check_output(['/usr/local/bin/ubnt_discovery', '--output-format=json', iface])
        data = json.loads(raw_data.decode())

    except subprocess.CalledProcessError:
        raise PluginError('Failed to run device discovery')

    except ValueError:
        raise PluginError('Error during JSON parsing')

    except Exception as e:
        raise PluginError(e)

    else:
        model_counters = {}
        for row in data:
            model_short = row['model_short']
            model = row['model']
            if model_short  not in model_counters.keys():
                model_counters[model_short] = {'value': 1, 'title': row['model']}
            else:
                model_counters[model_short]['value'] += 1

    return model_counters


def print_values(iface):
    data = get_data(iface)
    for key, values in data.items():
            print('{}.value {}'.format(key, values['value']))


def print_config(iface):
    data = get_data(iface)
    print('graph_title Ubiquiti devices')
    print('graph_vlabel number of devices')
    print('graph_category wireless')
    print('graph_category network')
    print('graph_info Monitors active devices on the network, using ubiquiti discovery protocol')
    for key, values in data.items():
            print('{}.label {}'.format(key, values['title']))
            print('{}.draw AREASTACK'.format(key))


if __name__ == '__main__':
    try:
        script_name, iface = sys.argv[0].rsplit('_', 1)
    except ValueError:
        raise PluginError('This plugin symlink must include the iface name, ex: "ubnt_discovery_eth1"')

    if (len(sys.argv) > 1) and sys.argv[1] == 'config':
        print_config(iface)
    else:
        print_values(iface)
